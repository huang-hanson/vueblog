version: '3'

services:
  nginx: # 服务名称
    image: nginx:latest # 最新版本的nginx
    ports:
      #- 80:80 # 把docker容器的80端口映射到宿主机的80端口
      - 81:81
    volumes:
      - /root/nginx/html:/usr/share/nginx/html  # 将docker中额html文件夹映射到宿主机的/root/nginx/html目录下
      - /root/nginx/nginx.conf:/etc/nginx/nginx.conf  # 将docker中额nginx.conf配置文件映射到宿主机的/root/nginx/nginx.conf目录下
    privileged: true # 这个必须要加，解决nginx的文件调用权限问题
  mysql:
    image: mysql:5.7.27
    ports:
      #- 3306:3306
      - 8081:3306
    environment:
      - MYSQL_ROOT_PASSWORD=your_password
    volumes:
      - /root/mysql/my.cnf:/etc/mysql/my.cnf
      - /mysql/log:/var/log/mysql # 映射日志目录，宿主机:容器
      - /mysql/data:/var/lib/mysql # 映射数据目录，宿主机:容器
      - /etc/localtime:/etc/localtime:ro # 让容器的时钟与宿主机时钟同步，避免时间的问题，ro是read only的意思，就是只读。
  redis:
    image: redis:latest
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./redis/data:/data
      - /root/redis/redis.conf:/etc/redis/redis.conf  # 将docker中额nginx.conf配置文件映射到宿主机的/root/nginx/nginx.conf目录下
    ports:
      - 6379:6379
  vueblog:
    image: vueblog:latest
    build: .   # 这个不能从docker hub中去拉取，需要自己构建，会去寻找同级下的Dockerfile文件（文件中的jar包）进行构建
    ports:
      - 8082:8082
    depends_on:
      - mysql
      - redis
